import { type ReactElement } from "react";
import { type ExpressionField, type FilterExpression } from "../utils/MapLibreRNStyles";
interface MapLibreJSONLayer {
    type: string;
    paint: {
        [k: string]: unknown;
    };
    layout: {
        [k: string]: unknown;
    };
    source?: string;
    "source-layer"?: string;
    minzoom?: number;
    maxzoom?: number;
    filter?: FilterExpression;
    id: string;
}
interface MapLibreJSONSource {
    type: string;
    url?: string;
    tiles?: string[];
    minzoom?: number;
    maxzoom?: number;
    attribution?: string;
    scheme?: "xyz" | "tms";
    bounds?: number[];
    buffer?: number;
    tileSize?: number;
    coordinates?: [
        [
            number,
            number
        ],
        [
            number,
            number
        ],
        [
            number,
            number
        ],
        [
            number,
            number
        ]
    ];
    cluster?: boolean;
    clusterMaxZoom?: number;
    clusterMinPoints?: number;
    clusterRadius?: number;
    clusterProperties?: {
        [propertyName: string]: ExpressionField;
    };
    data?: string | object;
    filter?: FilterExpression;
    generateId?: boolean;
    lineMetrics?: boolean;
    tolerance?: number;
}
interface MapLibreJSON {
    layers?: MapLibreJSONLayer[];
    sources?: {
        [key: string]: MapLibreJSONSource;
    };
}
interface StyleProps {
    /**
     * A JSON object conforming to the schema described in the MapLibre Style Specification, or a URL to such JSON.
     */
    json?: MapLibreJSON | URL;
}
/**
 * Style is a component that automatically adds sources / layers to the map using MapLibre Style Spec.
 * Only [`sources`](https://maplibre.org/maplibre-gl-js-docs/style-spec/sources/) & [`layers`](https://maplibre.org/maplibre-gl-js-docs/style-spec/layers/) are supported.
 * Other fields such as `sprites`, `glyphs` etc. will be ignored. Not all layer / source attributes from the style spec are supported, in general the supported attributes will be mentioned under https://github.com/maplibre/maplibre-react-native/tree/main/docs.
 *
 * TODO: Maintainer forking this project does not understand the above comment regarding what is supported.
 */
declare const Style: (props: StyleProps) => ReactElement;
export default Style;
//# sourceMappingURL=Style.d.ts.map